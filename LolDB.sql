-- MySQL Script generated by MySQL Workbench
-- Sun Sep  1 15:46:53 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`summoners`
-- -----------------------------------------------------
CCREATE TABLE `champions` (
   `champion_id` int(11) NOT NULL,
   `version` varchar(45) DEFAULT NULL,
   `key` varchar(45) DEFAULT NULL,
   `name` varchar(45) NOT NULL,
   `title` varchar(45) NOT NULL,
   `attack` int(11) DEFAULT NULL,
   `defense` int(11) DEFAULT NULL,
   `magic` int(11) DEFAULT NULL,
   `difficulty` int(11) DEFAULT NULL,
   PRIMARY KEY (`champion_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;


 CREATE TABLE `champions_roles` (
   `champion_id` int(11) NOT NULL,
   `role_id` int(11) NOT NULL,
   KEY `champion_Roles_champion_id_idx` (`champion_id`),
   KEY `champions_roles_role_id_idx` (`role_id`),
   CONSTRAINT `champions_roles_champion_id` FOREIGN KEY (`champion_id`) REFERENCES `champions` (`champion_id`),
   CONSTRAINT `champions_roles_role_id` FOREIGN KEY (`role_id`) REFERENCES `champroles` (`role_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 CREATE TABLE `champroles` (
   `role_id` int(11) NOT NULL,
   `name` varchar(45) NOT NULL,
   PRIMARY KEY (`role_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 CREATE TABLE `matches` (
   `match_id` bigint(20) NOT NULL,
   `season` int(11) NOT NULL,
   `patch` varchar(45) DEFAULT NULL,
   `region` varchar(45) NOT NULL,
   `gameMode` varchar(45) NOT NULL,
   `mapId` int(11) NOT NULL,
   `gameType` varchar(45) NOT NULL,
   `gameDuration` bigint(20) NOT NULL,
   `gameCreation` bigint(20) NOT NULL,
   PRIMARY KEY (`match_id`),
   UNIQUE KEY `match_id_UNIQUE` (`match_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 CREATE TABLE `match_participant_stats` (
   `match_id` bigint(20) NOT NULL,
   `participant_id` varchar(80) NOT NULL,
   `firstBloodAsist` varchar(45) NOT NULL,
   `visionScore` int(11) NOT NULL,
   `magicDamageDealtToChampions` int(11) NOT NULL,
   `damageDealtToObjectives` int(11) NOT NULL,
   `totalTimeCrowdControlDealt` int(11) NOT NULL,
   `longestTimeSpentLiving` int(11) NOT NULL,
   `tripleKills` int(11) NOT NULL,
   `kills` int(11) NOT NULL,
   `totalScoreRank` int(11) NOT NULL,
   `neutralMinionsKilled` int(11) NOT NULL,
   `damageDealtToTurrets` int(11) NOT NULL,
   `physicalDamageDealtToChampions` int(11) NOT NULL,
   `largestMultiKill` int(11) NOT NULL,
   `totalUnitsHealed` int(11) NOT NULL,
   `wardsKilled` int(11) NOT NULL,
   `largestCriticalStrike` int(11) NOT NULL,
   `largestKillingSpree` int(11) NOT NULL,
   `quadraKills` int(11) NOT NULL,
   `teamObjective` int(11) NOT NULL,
   `magicDamageDealt` int(11) NOT NULL,
   `item2` int(11) NOT NULL,
   `item3` int(11) NOT NULL,
   `item0` int(11) NOT NULL,
   `neutralMinionsKilledTeamJungle` int(11) NOT NULL,
   `item6` int(11) NOT NULL,
   `item4` int(11) NOT NULL,
   `item5` int(11) NOT NULL,
   `damageSelfMitigated` int(11) NOT NULL,
   `magicalDamageTaken` int(11) NOT NULL,
   `firstInhibitorKill` varchar(45) NOT NULL,
   `trueDamageTaken` int(11) NOT NULL,
   `assists` int(11) NOT NULL,
   `combatPlayerScore` int(11) NOT NULL,
   `goldSpent` int(11) NOT NULL,
   `trueDamageDealt` int(11) NOT NULL,
   `totalDamageTaken` int(11) NOT NULL,
   `physicalDamageDealt` int(11) NOT NULL,
   `sightWardsBoughtInGame` int(11) NOT NULL,
   `totalDamageDealtToChampions` int(11) NOT NULL,
   `physicalDamageTaken` int(11) NOT NULL,
   `totalPlayerScore` int(11) NOT NULL,
   `win` varchar(45) NOT NULL,
   `objectivePlayerScore` int(11) NOT NULL,
   `totalDamageDealt` int(11) NOT NULL,
   `item1` int(11) NOT NULL,
   `neutralMinionsKilledEnemyJungle` int(11) NOT NULL,
   `deaths` int(11) NOT NULL,
   `wardsPlaced` int(11) NOT NULL,
   `turretKills` int(11) NOT NULL,
   `firstBloodKill` varchar(45) NOT NULL,
   `trueDamageDealtToChampions` int(11) NOT NULL,
   `goldEarned` int(11) NOT NULL,
   `killingSprees` int(11) NOT NULL,
   `unrealKills` int(11) NOT NULL,
   `altarsCaptured` int(11) NOT NULL,
   `firstTowerAssist` varchar(45) NOT NULL,
   `firstTowerKill` varchar(45) NOT NULL,
   `champLevel` int(11) NOT NULL,
   `doubleKills` int(11) NOT NULL,
   `inhibitorKills` int(11) NOT NULL,
   `firstInhibitorAssist` varchar(45) NOT NULL,
   `visionWardsBoughtInGame` int(11) NOT NULL,
   `altarsNeutralized` int(11) NOT NULL,
   `pentaKills` int(11) NOT NULL,
   `totalHeal` int(11) NOT NULL,
   `totalMinionsKilled` int(11) NOT NULL,
   `timeCCingOthers` int(11) NOT NULL,
   KEY `match_participant_stats_participant_id_idx` (`participant_id`),
   KEY `match_participant_stats_match_id` (`match_id`),
   CONSTRAINT `match_participant_stats_match_id` FOREIGN KEY (`match_id`) REFERENCES `matches` (`match_id`),
   CONSTRAINT `match_participant_stats_participant_id` FOREIGN KEY (`participant_id`) REFERENCES `matches_participants` (`summoner_account_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;


 CREATE TABLE `summoners` (
   `summoner_id` int(11) NOT NULL AUTO_INCREMENT,
   `name` varchar(45) NOT NULL,
   `level` int(11) NOT NULL,
   `encryptedId` varchar(80) NOT NULL,
   `accountId` varchar(80) NOT NULL,
   `region` varchar(45) NOT NULL,
   PRIMARY KEY (`summoner_id`),
   UNIQUE KEY `summoner_id_UNIQUE` (`summoner_id`),
   UNIQUE KEY `name_UNIQUE` (`name`),
   UNIQUE KEY `accountId_UNIQUE` (`accountId`)
 ) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

 CREATE TABLE `summoners_matches` (
   `match_id` bigint(20) NOT NULL,
   `accountId` varchar(80) NOT NULL,
   `lane` varchar(45) NOT NULL,
   `region` varchar(45) NOT NULL,
   `season` int(11) NOT NULL,
   `queue` int(11) DEFAULT NULL,
   `role` varchar(45) NOT NULL,
   `timestamp` bigint(20) DEFAULT NULL,
   KEY `summoners_matches_match_id_idx` (`match_id`),
   KEY `summoners_matches_account_id_idx` (`accountId`),
   CONSTRAINT `summoners_matches_match_id` FOREIGN KEY (`match_id`) REFERENCES `matches` (`match_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 CREATE TABLE `teams_stats` (
   `match_id` bigint(20) NOT NULL,
   `teamId` int(11) NOT NULL,
   `firstDragon` varchar(45) NOT NULL,
   `firstInhibitor` varchar(45) NOT NULL,
   `baronKills` int(11) NOT NULL,
   `firstRiftHerald` varchar(45) NOT NULL,
   `firstBaron` varchar(45) NOT NULL,
   `riftHeraldKills` int(11) NOT NULL,
   `firstBlood` varchar(45) NOT NULL,
   `vilemawKills` int(11) NOT NULL,
   `inhibitorKills` int(11) NOT NULL,
   `firstTower` varchar(45) NOT NULL,
   `towerKills` int(11) NOT NULL,
   `dominionVictoryScore` int(11) NOT NULL,
   `win` varchar(45) NOT NULL,
   `dragonKills` int(11) NOT NULL,
   KEY `teams_stats_match_id_idx` (`match_id`),
   CONSTRAINT `teams_stats_match_id` FOREIGN KEY (`match_id`) REFERENCES `matches` (`match_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 CREATE TABLE `team_bans` (
   `match_id` bigint(20) NOT NULL,
   `teamId` int(11) NOT NULL,
   `pickTurn` int(11) NOT NULL,
   `championId` int(11) NOT NULL,
   KEY `team_bans_match_id_idx` (`match_id`) /*!80000 INVISIBLE */,
   KEY `team_bans_champion_id_idx` (`championId`),
   CONSTRAINT `team_bans_champion_id` FOREIGN KEY (`championId`) REFERENCES `champions` (`champion_id`),
   CONSTRAINT `team_bans_match_id` FOREIGN KEY (`match_id`) REFERENCES `matches` (`match_id`)
 ) ENGINE=InnoDB DEFAULT CHARSET=utf8;




SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
